VCS_TIMEOUT = 5ms

$(LINT_DIR)/wrapper.sv $(LINT_DIR)/testbench.sv:
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/$(@F) > $@
	@sed -i 's/BP_DRAM_FLOWVAR/"$(DRAM)"/g' $@

$(LINT_DIR)/flist.vcs:
	@grep -v -e "^\#" $(SYN_PATH)/flist.vcs       > $@
	@grep -v -e "^\#" $(TB_PATH)/$(TB)/flist.vcs >> $@
	@echo wrapper.sv                             >> $@
	@echo testbench.sv                           >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_reset_gen.v" >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_clock_gen.v" >> $@

LINT_COLLATERAL  = $(addprefix $(LINT_DIR)/, flist.vcs testbench.sv wrapper.sv)

$(BUILD_DIR)/testbench.sv $(BUILD_DIR)/wrapper.sv:
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/$(@F) > $@
	@sed -i 's/BP_DRAM_FLOWVAR/"$(DRAM)"/g' $@

$(BUILD_DIR)/flist.vcs:
	@grep -v -e "^\#" $(SYN_PATH)/flist.vcs       > $@
	@grep -v -e "^\#" $(TB_PATH)/$(TB)/flist.vcs >> $@
	@echo wrapper.sv                             >> $@
	@echo testbench.sv                           >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_reset_gen.v" >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_clock_gen.v" >> $@

BUILD_COLLATERAL  = $(addprefix $(BUILD_DIR)/, flist.vcs wrapper.sv testbench.sv)

$(SIM_DIR)/simv $(SIM_DIR)/simv.daidir: $(BUILD_DIR)/simv $(BUILD_DIR)/simv.daidir
	@ln -nsf $(<D)/$(@F) $@

# TODO: NUM_INSTR_P, SEED_P, CCE_MODE_P should be part of the rom name to help enable
#   dependency chaining / parallelism
# TODO: force rebuild of this target; destination should probably be in SIM_DIR so clean will
#   remove it
$(TB_PATH)/$(TB)/bsg_trace_rom_0.tr:
	$(PYTHON) $(TB_PATH)/$(TB)/bsg_trace_rom.py -n $(NUM_INSTR_P) -s $(SEED_P) --lce-mode $(LCE_MODE_P) --cce-mode $(CCE_MODE_P) --test $(ME_TEST_P) > $@

$(SIM_DIR)/cce_ucode.mem: $(BP_SDK_UCODE_DIR)/$(CCE_MEM)
	cp $< $@

$(SIM_DIR)/test.tr: $(TB_PATH)/$(TB)/bsg_trace_rom_0.tr
	@cp $< $@

SIM_COLLATERAL  = $(addprefix $(SIM_DIR)/, simv simv.daidir)
SIM_COLLATERAL += $(addprefix $(SIM_DIR)/, cce_ucode.mem)
SIM_COLLATERAL += $(addprefix $(SIM_DIR)/, test.tr)

